FROM node:14.15.3-alpine

WORKDIR /src

ARG APP_ENV
ENV APP_ENV=${APP_ENV}

ARG DB_HOST
ENV DB_HOST=${DB_HOST}

ARG DB_PORT
ENV DB_PORT=${DB_PORT}

ARG DB_NAME
ENV DB_NAME=${DB_NAME}

ARG DB_USER_NAME
ENV DB_USER_NAME=${DB_USER_NAME}

ARG DB_PASSWORD
ENV DB_PASSWORD=${DB_PASSWORD}

ARG REDIS_HOST
ENV REDIS_HOST=${REDIS_HOST}

ARG REDIS_PORT
ENV REDIS_PORT=${REDIS_PORT}

ARG REDIS_PASSWORD
ENV REDIS_PASSWORD=${REDIS_PASSWORD}

ARG JWT_SECRET
ENV JWT_SECRET=${JWT_SECRET}

ARG AWS_REGION
ENV AWS_REGION=${AWS_REGION}

ARG AWS_ACCESS_KEY_ID
ENV AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}

ARG AWS_SECRET_ACCESS_KEY
ENV AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}

ARG AWS_PUBLIC_BUCKET_NAME
ENV AWS_PUBLIC_BUCKET_NAME=${AWS_PUBLIC_BUCKET_NAME}

ARG AWS_BUCKET_CSV
ENV AWS_BUCKET_CSV=${AWS_BUCKET_CSV}

ARG AWS_QUEUE_URL
ENV AWS_QUEUE_URL=${AWS_QUEUE_URL}

ARG AWS_PUBLIC_BUCKET_URL
ENV AWS_PUBLIC_BUCKET_URL=${AWS_PUBLIC_BUCKET_URL}

ARG VISITOR_DOMAIN
ENV VISITOR_DOMAIN=${VISITOR_DOMAIN}

ARG EXHIBITOR_DOMAIN
ENV EXHIBITOR_DOMAIN=${EXHIBITOR_DOMAIN}

ARG LAMBDA_CONVERT_CONTENT_FUNCTION
ENV LAMBDA_CONVERT_CONTENT_FUNCTION=${LAMBDA_CONVERT_CONTENT_FUNCTION}

ARG LAMBDA_CONVERT_PROFILE_FUNCTION
ENV LAMBDA_CONVERT_PROFILE_FUNCTION=${LAMBDA_CONVERT_PROFILE_FUNCTION}

RUN apk add --no-cache make gcc g++ python && \
  yarn install && \
  yarn add --force bcrypt --build-from-source && \
  apk del make gcc g++ python

COPY package.json yarn.lock ./
RUN yarn --pure-lockfile
COPY . .
RUN yarn generate:graphql-typings
RUN yarn build

EXPOSE 3000
# EXPOSE 8008

CMD ["yarn", "start:dev"]
